#!/usr/bin/env ruby

require 'optparse'
require_relative '../lib/tryouts'

# Add local lib directories to the load path
Dir.glob(File.join(Dir.pwd, '{lib,..,lib}')).each { |dir| $LOAD_PATH.unshift(dir) }

# Parse command-line arguments
OptionParser.new do |opts|
  opts.on('-V', '--version', 'Display the version') do
    puts "Tryouts: #{Tryouts::VERSION}"
    exit
  end
  opts.on('-q', '--quiet', 'Run in quiet mode') { Tryouts.quiet = true }
  opts.on('-v', '--verbose', 'Run in verbose mode') { Tryouts.noisy = true }
  opts.on('-f', '--fails', 'Show only failing tryouts') { Tryouts.fails = true }
  opts.on('-D', '--debug', 'Run in debug mode') { Tryouts.debug = true }
  opts.on('-h', '--help', 'Display this help') do
    puts opts
    exit
  end
end.parse!

# Find tryouts path with a path glob unless thin
# script was called with arguments in which case
# we consume those as a list of paths.
paths = if ARGV.empty?
          Dir.glob(
            ['./{try,tryouts/,.}/*_{try,tryouts}.rb'],
            base: Dir.pwd
          ).sort # deterministic order

        else
          ARGV
        end

# Running the tryouts returns the number of
# test failures so here we pass that value
# through as the exit code for the script.
exit Tryouts.run_all(*paths)
