#!/usr/bin/env /Users/d/.rbenv/shims/ruby

# Coverage tracking (must be first)
if ENV['COVERAGE'] || ENV['SIMPLECOV']
  require 'simplecov'
  SimpleCov.start do
    track_files 'lib/**/*.rb'
    add_filter '/try/'
    add_filter '/test/'
    add_filter '/test_'
    add_filter '/spec/'
    add_filter '/examples/'
    add_filter '/docs/'

    add_group 'Core', 'lib/tryouts.rb'
    add_group 'CLI', 'lib/tryouts/cli'
    add_group 'Formatters', 'lib/tryouts/cli/formatters'
    add_group 'Parsers', 'lib/tryouts/prism_parser.rb'
    add_group 'Data Structures', ['lib/tryouts/testcase.rb', 'lib/tryouts/testbatch.rb']
    add_group 'Translators', 'lib/tryouts/translators'
    add_group 'Execution', ['lib/tryouts/test_executor.rb', 'lib/tryouts/test_runner.rb', 'lib/tryouts/file_processor.rb']

    coverage_dir 'coverage'

    # Coverage thresholds disabled to prevent CI failures
    # minimum_coverage 80
    # minimum_coverage_by_file 70
  end

  SimpleCov.command_name 'Tryouts CLI'
end

require_relative '../lib/tryouts'

# Add development library paths
lib_glob = File.join(Dir.pwd, '{lib,../lib,.}')
Tryouts.update_load_path(lib_glob) if Tryouts.respond_to?(:update_load_path)

# Parse args and run CLI
begin
  files, options = Tryouts::CLI.parse_args(ARGV)

  # Default file discovery if no files specified
  if files.empty?
    files = Dir.glob(
      ['./{try,tryouts,.}/*_try.rb'],
      base: Dir.pwd,
    ).sort
  end

  cli = Tryouts::CLI.new
  exit cli.run(files, **options)
rescue StandardError => ex
  warn "Error: #{ex.message}"
  warn ex.backtrace.join("\n") if options[:debug]
  exit 1
end
