name: CI

on:
  push:
    branches:
      - main

  pull_request:

  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Agent-optimized output for debugging CI failures efficiently
  # Runs tests with structured output that's easier for AI agents to parse
  # Use this job first when investigating failures, then human output for details
  agent-output:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: "Agent Output: ${{ matrix.testgroup }} - ${{ matrix.focus }} (Ruby ${{ matrix.ruby }})"
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        ruby: ["3.4"]
        testgroup: [core, expectations]
        focus: [summary, critical]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - name: Configure bundle groups
        run: bundle config set --local without 'development'

      - name: Install dependencies
        run: bundle install

      - name: Run tests with agent output (${{ matrix.focus }} focus)
        run: bundle exec exe/try --agent --agent-focus ${{ matrix.focus }} try/${{ matrix.testgroup }}

  tryouts-groups:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: "Tryouts: ${{ matrix.testgroup }} (Ruby ${{ matrix.ruby }})"
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        ruby: ["3.4", "3.5"]
        testgroup: [core, expectations, formatters, translators]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - name: Configure bundle groups
        run: bundle config set --local without 'development'

      - name: Install dependencies
        run: bundle install

      - name: Run framework unit tests with coverage
        run: COVERAGE=1 FORCE_COLOR=1 bundle exec exe/try try/${{ matrix.testgroup }}

  failure_is_an_option:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: "Runtime Safety Checks (intentionally fail)  (Ruby ${{ matrix.ruby }})"
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.4", "3.5"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - name: Configure bundle groups
        run: bundle config set --local without 'development'

      - name: Install dependencies
        run: bundle install

      - name: Run framework unit tests with coverage
        run: COVERAGE=1 FORCE_COLOR=1 bundle exec exe/try try/safety try/continue-on-error

  cli-options:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: CLI Options Test (Ruby ${{ matrix.ruby }})
    strategy:
      fail-fast: true
      matrix:
        ruby: ["3.4", "3.5"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - name: Configure bundle groups
        run: bundle config set --local with 'test'

      - name: Install dependencies
        run: bundle install

      - name: Test version flag
        run: bundle exec exe/try -V

      - name: Test verbose mode
        run: bundle exec exe/try -v try/core/advanced_syntax_try.rb

      - name: Test debug mode
        run: bundle exec exe/try -D try/core/advanced_syntax_try.rb

      - name: Test verbose failures
        run: bundle exec exe/try -vf try/core/advanced_syntax_try.rb

      - name: Test quiet mode
        run: bundle exec exe/try -q try/core/advanced_syntax_try.rb

      - name: Test agent mode
        run: bundle exec exe/try --agent try/core/advanced_syntax_try.rb

      - name: Test agent with summary focus
        run: bundle exec exe/try --agent --agent-focus summary try/core/

      - name: Test agent with first-failure focus
        run: bundle exec exe/try --agent --agent-focus first-failure try/continue-on-error || true # never fail

      - name: Test agent with critical focus
        run: bundle exec exe/try --agent --agent-focus critical try/continue-on-error || true

  parser-matrix:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    name: "Parser: ${{ matrix.parser }} (Ruby ${{ matrix.ruby }})"
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        ruby: ["3.4", "3.5"]
        parser: [enhanced, prism]
        include:
          - parser: enhanced
            parser_flag: "--enhanced-parser"
          - parser: prism
            parser_flag: "--legacy-parser"

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - name: Configure bundle groups
        run: bundle config set --local without 'development'

      - name: Install dependencies
        run: bundle install

      - name: Test core functionality with ${{ matrix.parser }} parser
        run: FORCE_COLOR=1 bundle exec exe/try ${{ matrix.parser_flag }} try/core/

      - name: Test expectations with ${{ matrix.parser }} parser
        run: FORCE_COLOR=1 bundle exec exe/try ${{ matrix.parser_flag }} try/expectations/

      - name: Test new non-nil expectation with ${{ matrix.parser }} parser
        run: FORCE_COLOR=1 bundle exec exe/try ${{ matrix.parser_flag }} try/expectations/non_nil_expectations_try.rb

      - name: Test parallel execution with ${{ matrix.parser }} parser
        run: FORCE_COLOR=1 bundle exec exe/try ${{ matrix.parser_flag }} -j2 try/core/basic_syntax_try.rb try/core/advanced_syntax_try.rb
